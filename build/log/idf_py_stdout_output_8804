[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2.2\projects\OV2640LCD\build\bootloader\esp-idf\esptool_py && python C:/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Espressif/frameworks/esp-idf-v5.2.2/projects/OV2640LCD/build/bootloader/bootloader.bin"
Bootloader binary size 0x6870 bytes. 0x790 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
In file included from C:/Espressif/frameworks/esp-idf-v5.2.2/projects/OV2640LCD/main/main.c:25:
C:/Espressif/frameworks/esp-idf-v5.2.2/components/spi_flash/include/esp_spi_flash.h:6:2: warning: #warning esp_spi_flash.h is deprecated, please use spi_flash_mmap.h instead [-Wcpp]
    6 | #warning esp_spi_flash.h is deprecated, please use spi_flash_mmap.h instead
      |  ^~~~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable app-template.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Espressif/frameworks/esp-idf-v5.2.2/projects/OV2640LCD/build/app-template.bin
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2.2\projects\OV2640LCD\build\esp-idf\esptool_py && python C:/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/frameworks/esp-idf-v5.2.2/projects/OV2640LCD/build/partition_table/partition-table.bin C:/Espressif/frameworks/esp-idf-v5.2.2/projects/OV2640LCD/build/app-template.bin"
app-template.bin binary size 0x59ed0 bytes. Smallest app partition is 0x100000 bytes. 0xa6130 bytes (65%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2.2\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/esptool.py --chip esp32 -p COM11 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 app-template.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port COM11
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: d4:d4:da:13:94:94
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00069fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26736 bytes to 16365...
Writing at 0x00001000... (100 %)
Wrote 26736 bytes (16365 compressed) at 0x00001000 in 0.8 seconds (effective 255.2 kbit/s)...
Hash of data verified.
Compressed 368336 bytes to 190275...
Writing at 0x00010000... (8 %)
Writing at 0x000207be... (16 %)
Writing at 0x000299e1... (25 %)
Writing at 0x0002fc51... (33 %)
Writing at 0x00035840... (41 %)
Writing at 0x0003cbf9... (50 %)
Writing at 0x000444f3... (58 %)
Writing at 0x0004a85b... (66 %)
Writing at 0x000505f8... (75 %)
Writing at 0x000594c2... (83 %)
Writing at 0x0005fb21... (91 %)
Writing at 0x00065fbb... (100 %)
Wrote 368336 bytes (190275 compressed) at 0x00010000 in 4.6 seconds (effective 635.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 356.1 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
Espressif/frameworks/esp-idf-v5.2.2 -D SERIAL_TOOL=python;;C:/Espressif/frameworks/esp-idf-v5.2.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Espressif/frameworks/esp-idf-v5.2.2/projects/OV2640LCD/build -P C:/Espressif/frameworks/esp-idf-v5.2.2/components/esptool_py/run_serial_tool.cmake"
